#pragma once

using std::cout;
using std::endl;
using int32 = int;
using uint32 = unsigned int;

constexpr auto One = 49;
constexpr auto Nine = 57;;

enum
{
	Level = 3,
};

struct Map
{
	static inline int32 Stage = 0;

	static inline int32 Lv1_x = 20;
	static inline int32 Lv1_y = 9;
	static inline int32 Lv2_x = 28;
	static inline int32 Lv2_y = 13;
	static inline int32 Lv3_x = 39;
	static inline int32 Lv3_y = 19;
	static inline int32 N = 48;

	static inline char MapData[Level][19][40] = 
	{

		{
			"--------------------",//0
			"|                  |",//1 // 20
			"|                  |",//2
			"|                  |",//3
			"|                  |",//4
			"|                  |",//5
			"|                  |",//6
			"|                  |",//7
			"--------------------",//8
		},
		{
			"----------------------------",//0
			"|                          |",//1 //28
			"|                          |",//2
			"|                          |",//3
			"|                          |",//4
			"|                          |",//5
			"|                          |",//6
			"|                          |",//7
			"|                          |",//8
			"|                          |",//9
			"|                          |",//10
			"|                          |",//11
			"----------------------------",//12
		},
		{
			"---------------------------------------",//0
			"|                                     |",//1 // 39
			"|                                     |",//2
			"|                                     |",//3
			"|                                     |",//4
			"|                                     |",//5
			"|                                     |",//6
			"|                                     |",//7
			"|                                     |",//8
			"|                                     |",//9
			"|                                     |",//10
			"|                                     |",//11
			"|                                     |",//12
			"|                                     |",//13
			"|                                     |",//14
			"|                                     |",//15
			"|                                     |",//16
			"|                                     |",//17
			"---------------------------------------",//18
		}
	};

	static inline char DData[Level][19][40] =
	{
		{
			"--------------------",//0
			"|##################|",//1 // 20
			"|##################|",//2
			"|##################|",//3
			"|##################|",//4
			"|##################|",//5
			"|##################|",//6
			"|##################|",//7
			"--------------------",//8
		},
		{
			"----------------------------",//0
			"|##########################|",//1 //28
			"|##########################|",//2
			"|##########################|",//3
			"|##########################|",//4
			"|##########################|",//5
			"|##########################|",//6
			"|##########################|",//7
			"|##########################|",//8
			"|##########################|",//9
			"|##########################|",//10
			"|##########################|",//11
			"----------------------------",//12
		},
		{
			"---------------------------------------",//0
			"|#####################################|",//1 // 39
			"|#####################################|",//2
			"|#####################################|",//3
			"|#####################################|",//4
			"|#####################################|",//5
			"|#####################################|",//6
			"|#####################################|",//7
			"|#####################################|",//8
			"|#####################################|",//9
			"|#####################################|",//10
			"|#####################################|",//11
			"|#####################################|",//12
			"|#####################################|",//13
			"|#####################################|",//14
			"|#####################################|",//15
			"|#####################################|",//16
			"|#####################################|",//17
			"---------------------------------------",//18
		}
	};

	void Draw(int St, int X, int Y)
	{
		for (int y = 0; y < Y; ++y)
		{
			for (int x = 0; x < X; ++x)
			{
				if ((rand() % 5) == 3 && y > 1 && x > 1 && y < Y - 1 && x < X - 1)
				{
					MapData[St][y][x] = '*';
				}
			}
		}
		for (int i = 0; i < Y; ++i)
		{
			for (int j = 0; j < X; ++j)
			{
				for(int r = -1; r <2; ++r)
					for (int c = -1; c < 2; ++c)
					{
						if (!(r | c))continue;
						if (GetMap(St, j, i) != '-' && GetMap(St, j, i)'|' && GetMap(St, j, i) != '*')
							if (i + r >= 0 and i + r < Y and j + c >= 0 and j + c < X && GetMap(St, j + r, i + c) == '*')
								++N;
					}
				if (N > 48)
				{
					MapData[St][i][j] = N;
					N = 48;
				}
			}
		}
	}

	void DrawMap(int St, int X, int Y)
	{
		for (int y = 0; y < Y; ++y)
		{
			for (int x = 0; x < X; ++x)
			{
				cout << DData[St][y][x];
			}
			cout << endl;
		}
	}

	TCHAR GetMap(int St, int X, int Y) { return MapData[St][Y][X]; }

};

static void Gotoxy(int X, int Y)
{
	COORD Cur;
	Cur.X = X;
	Cur.Y = Y;
	SetConsoleCursorPosition(GetStdHandle(STD_OUTPUT_HANDLE), Cur);
}